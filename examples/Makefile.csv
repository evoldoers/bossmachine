
all: simple-csv-example complex-csv-example

# Base-call the output of a neural network run on a (short, truncated) Oxford Nanopore MinION read

# The file nanopore_test.csv was generated by PoreOver (https://github.com/jordisr/poreover).
# It describes a gapped profile: the five columns represent the probabilities of the four bases, plus a gap.
# With Machine Boss you can find the most likely sequence, summing over all alignments, and doing a beam search over sequences

simple-csv-example:
	boss --recognize-csv nanopore_test.csv --beam-decode

# This command takes the ProSite regex for the N-glycosylation site 'N[^P][ST][^P]'
# runs it through a reverse-translation machine (`--preset translate`),
# adds a self-loop with a dummy parameter (`--count-copies n`),
# flanks it with a null model (`--generate-uniform-dna`),
# and then uses the Forward-Backward algorithm to find the expected usage of the dummy parameter (`--counts`)

# The output is the expected number of times that each parameter was used, according to the posterior distribution over alignments

# Note that the parameters also include the codon frequencies, so the output effectively also includes the expected number of times each codon occurs in the nanopore trace

complex-csv-example:
	boss --counts -v6 \
	 --generate-uniform-dna \
	 --concat \
	 --begin \
	 --aa-regex 'N[^P][ST][^P]' --transpose \
	 --preset translate --double-strand \
	 --concat --generate-uniform-dna \
	 --count-copies n \
	 --end \
	 --recognize-csv nanopore_test.csv \
	 --params Ecoli_codon.json
